- I'm creating social media app backend project here. Create a 'package.json' file with basic project information (name, version, description, main entry point). Use 'npm init -y' equivalent configurations.
- Add 'express' as a project dependency (updated package.json and added express)
- Create a main application file (created index.js with base setup)
- @terminal run this app (gave error for missing node_modules - did npm i and worked)
- Add a '.gitignore' file to exclude 'node_modules'

- Add 'body-parser' middleware to parse request bodies (both URL-encoded and JSON).
- Add 'cors' middleware to handle Cross-Origin Resource Sharing (for development, you might allow all origins initially, but consider security for production).
- Implement basic logging middleware using 'morgan' to log HTTP requests

- For my app can you suggest folder structure as per current best practice of express app
- can you please add this folders? (gave terminal commands to create such structure with mkdir & touch)

- @terminal /explain error and how to resolve same, getting this after moving index.js to src (gave me solution to update path)

- @workspace can you help me with creating user model, user authentication and user profile ? (helped me get code blocks to add in files)
- @workspace for recent changes - what package we need to install ? (it gives us code but we need to add package with npm i)

- Add nodemon for auto reload (gave line to add in package.json & cmd to install same)
- Can you add update user profile feature for authenticated user , also validate input data

- Consider my project structure src/ help me add new files and code block for creating and managing posts for my social media app project

- consider project structure /src - can you add new features to post module like - get single post by id, get user specific posts

- create a new module as follows - followerId, followingId such that duplicate does not happen , apis to follow and unfollow user, get followers and followings

- @workspace Consider my project workspace /src and help me create live comments feature - implement web socket , consider authentication, error handling & best practice to develop same

- I can see now comments been added, so when we call api and add comment - listner does not get notified. So flow should be like this right - to call an api that saves post and emits event for listners
- Do require updates to commentSocket file